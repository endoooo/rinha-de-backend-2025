services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: payment_processor_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 90M

  api1:
    build: .
    environment:
      DATABASE_URL: ecto://postgres:postgres@db/payment_processor_prod
      SECRET_KEY_BASE: "VvoX+B2qGQFBpIYKnKOqfKsLJ5w9O5fSBW9qK9BqP7W5/K2GFp7+DqXGJ8WBqP3Q"
      PORT: 9999
      MIX_ENV: prod
      PHX_SERVER: true
      ERL_MAX_PORTS: 4096
      INSTANCE_ID: "api1"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 125M
    restart: unless-stopped

  api2:
    build: .
    environment:
      DATABASE_URL: ecto://postgres:postgres@db/payment_processor_prod
      SECRET_KEY_BASE: "VvoX+B2qGQFBpIYKnKOqfKsLJ5w9O5fSBW9qK9BqP7W5/K2GFp7+DqXGJ8WBqP3Q"
      PORT: 9999  
      MIX_ENV: prod
      PHX_SERVER: true
      ERL_MAX_PORTS: 4096
      INSTANCE_ID: "api2"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 125M
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "9999:9999"
    networks:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 10M

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
    name: payment-processor

volumes:
  postgres_data: